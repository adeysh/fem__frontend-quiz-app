@use '../abstracts' as a;

.toggle-container {
    @include a.flexbox($align: center, $justify: flex-end, $gap: a.rem(8));

    svg {
        width: clamp(1rem, 0.5229rem + 2.0356vw, 1.5rem);
        height: clamp(1rem, 0.5229rem + 2.0356vw, 1.5rem);
    }

    .sun-dark,
    .moon-dark {
        display: none;
    }

    .sun-light,
    .moon-light {
        display: inline-block;
    }
}

.switch {
    position: relative;
    display: inline-block;
    width: a.rem(45);
    height: a.rem(24);
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--slider-bg);
    -webkit-transition: .4s;
    transition: .4s;
}

.slider::before {
    position: absolute;
    content: "";
    height: a.rem(18);
    width: a.rem(18);
    left: a.rem(3.68);
    bottom: a.rem(3);
    background-color: var(--slider-before-bg);
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:hover::before {
    background-color: var(--slider-hover-before-bg);
}

input[type="checkbox"]:not(:checked)+.slider {
    background-color: var(--input-not-checked-slider-bg);

    &:hover {
        background-color: var(--input-not-checked-slider-hover-bg);
    }
}

input:checked+.slider {
    background-color: var(--input-checked-slider-bg);
}

input:focus+.slider {
    box-shadow: 0 0 1px var(--purple);
}

input:checked+.slider::before {
    -webkit-transform: translateX(21px);
    -ms-transform: translateX(21px);
    transform: translateX(20px);
}

input:checked+.slider:hover::before {
    background-color: var(--input-checked-slider-hover-bg);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round::before {
    border-radius: 50%;
}